#!/usr/bin/env sh

usage(){
  echo "<real name> <email> <comment>"
  echo "  Creates a new key for use with GPG."
}

setup(){
  real_name=$1
  email=$2
  comment=$3

}

validate(){
  if [ -z "$real_name" ]; then
    fail "I need a name to associate with the key!"
  fi

  if [ -z "$email" ]; then
    fail "I need an email address to associate with the key!"
  fi

  if echo $email | grep -v -q '@.*\.'; then
    fail "'$email' doesn't appear to be an email address (needs an @ and then a .)"
  fi

  if gpg -K "$email" | grep -q '^sec'; then
    fail "There's already a key for '${email}'! Probably you want to use that one!"
  fi

  if [ -z "$comment" ]; then
    fail "I need an identifying comment for your identity, like 'main email address' or something"
  fi
}

invoke(){
  echo "Creating the key - you'll be asked for a password. Make it a good one."
  $GNUPG -q --batch --gen-key <<-PARAM
Key-Type: RSA
Key-Length: 4096
Key-Usage: encrypt,sign,auth
Name-Real: $real_name
Name-Comment: $comment
Name-Email: $email
Expire-Date: 0
Preferences: SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
%ask-passphrase
%commit
PARAM
  [[ $? != 0 ]] && return 1

  # set up some sub keys, in order not to use the base key day-to-day
  local COMMANDS=$(echo "addkey|4|4096|2y|addkey|6|4096|2y|save" | tr '|' "\n")
  script -c "$GNUPG --command-fd=0 --edit-key $email <<< \"$COMMANDS\"" >/dev/null
  RETVAL=$?

  # generate a revokation certificate
  get_my_key
  revoke_path="${GNUPGHOME}/${MY_KEY}-revoke.gpg.asc"
  echo $revoke_path
  COMMANDS=$(echo "y|1|Revocation generated along with key ahead of need.|y" | tr '|' "\n")
  script -c "$GNUPG --command-fd=0 --output \"${revoke_path}\" --gen-revoke $email <<< \"$COMMANDS\"" >/dev/null
  [[ $? -ne 0 ]] && RETVAL=$?

#  #For development purposes
#  send_command= "$GNUPG --keyserver hkp://keys.gnupg.net --send-keys $email"
#  if [ $DONT_SEND = "yes" ]; then
#    echo "Not actually sending key..."
#    echo "Would do: $send_command"
#  else
#    $send_command
#  fi
#  [[ $? -ne 0 ]] && RETVAL=$?

  return $RETVAL
}

success(){
  echo
  echo "Excellent! You created a fresh GPG key. Here's what it looks like:"
  echo
  $GNUPG -K ${email}
}

failure(){
  echo
  echo "Seems like there was some problem generating your key."
  echo "GPG can be really picky about things, though - it's possible you have a working key right now:"
  echo "Here's what it looks like - you should see one line that starts 'sec' and two that start 'ssb'"
  echo
  $GNUPG -K ${email}
}

#!/usr/bin/env sh

usage() {
  echo "<filename> <recipient>+"
  echo "  Encrypts, signs and armors a file to at least one recipient"
  echo "  You will be able to safely email the resulting file to any and all of the people listed."
}

setup() {
  file=$1
  shift

  recipients=$1
  shift

  while [ $# -gt 0 ]; do
    recipients="${recipients}${1}"
    shift
  done

  recipients="${recipients}"

  output="$(basename ${file}).gpg.asc"
}

validate() {
  if [ -z "$file" ]; then
    fail "No file argument! I have to have a file to encrypt."
  fi

  if [ -z "$recipients" ]; then
    fail "No recipients listed! I need at least one person to encrypt this file for."
  fi

  if [ ! -f "$file" ]; then
    fail "I can't find '${file}', so I can't encrypt it!"
  fi


  if [ -f "$output" ]; then
    fail "I want to encrypt '${file}' to '${output}' but there's already a file by that name and I don't want to mess anything up."
  fi
}

invoke() {
  echo "Running $GNUPG..."

  #This command will:
  #  sign with your default key
  #  encrypt to the selected recipient
  #  also encrypt to yourself (not being able to re-decrypt can be very confusing).
  $GNUPG  --armor --command-fd=0 --auto-key-locate=local,cert,keyserver,pka --output  "${output}" --hidden-encrypt-to $MY_KEY --sign  --encrypt  "${file}" <<-RECV
        ${recipients}

RECV
}

success() {
  echo "Successfully encrypted '$file' to '$output'"
}

failure() {
  echo "We had some issue with GPG - it may be that you don't have keys for your recipients, or something."
}
